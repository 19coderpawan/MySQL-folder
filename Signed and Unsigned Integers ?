=>Signed and Unsigned Integers in SQL
  ->In SQL, particularly in MySQL, integers can be classified as signed or unsigned. This classification determines the range of values that can be stored in an integer column.
      1. Signed Integers
          Definition: Signed integers can represent both positive and negative values, including zero. The range of signed integers is divided between negative and positive values.
            Range: For a signed integer type, the range typically is:
              TINYINT: -128 to 127
              SMALLINT: -32,768 to 32,767
              MEDIUMINT: -8,388,608 to 8,388,607
              INT: -2,147,483,648 to 2,147,483,647
              BIGINT: -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807
                  Example of Signed Integer Declaration in MySQL:

                        CREATE TABLE ExampleSigned (
                            id INT SIGNED,
                            value SMALLINT SIGNED
                        );

      2. Unsigned Integers
          Definition: Unsigned integers can only represent non-negative values (zero and positive numbers). This allows for a larger upper range of values since there is no need to allocate space for negative numbers.
            Range: For an unsigned integer type, the range typically is:
              TINYINT UNSIGNED: 0 to 255
              SMALLINT UNSIGNED: 0 to 65,535
              MEDIUMINT UNSIGNED: 0 to 16,777,215
              INT UNSIGNED: 0 to 4,294,967,295
              BIGINT UNSIGNED: 0 to 18,446,744,073,709,551,615
                Example of Unsigned Integer Declaration in MySQL:

                    CREATE TABLE ExampleUnsigned (
                        id INT UNSIGNED,
                        quantity SMALLINT UNSIGNED
                    );
